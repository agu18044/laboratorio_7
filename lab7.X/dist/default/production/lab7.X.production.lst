

Microchip MPLAB XC8 Assembler V2.31 build 20201012212115 
                                                                                               Tue Sep 28 18:09:47 2021

Microchip MPLAB XC8 C Compiler v2.31 (Free license) build 20201012212115 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	idataBANK0,global,class=CODE,delta=2,noexec
     5                           	psect	nvCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	nvBANK0,global,class=BANK0,space=1,delta=1,noexec
     7                           	psect	cinit,global,class=CODE,merge=1,delta=2
     8                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     9                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,noexec
    10                           	psect	inittext,global,class=CODE,delta=2
    11                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
    12                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
    13                           	psect	maintext,global,class=CODE,split=1,delta=2
    14                           	psect	text1,local,class=CODE,merge=1,delta=2
    15                           	psect	text2,local,class=CODE,merge=1,delta=2
    16                           	psect	text3,local,class=CODE,merge=1,delta=2,group=1
    17                           	psect	text4,local,class=CODE,merge=1,delta=2,group=1
    18                           	psect	text5,local,class=CODE,merge=1,delta=2
    19                           	psect	intentry,global,class=CODE,delta=2
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22  0000                     
    23                           ; Version 2.20
    24                           ; Generated 12/02/2020 GMT
    25                           ; 
    26                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution.
    40                           ; 
    41                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    42                           ;        software without specific prior written permission.
    43                           ; 
    44                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    45                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    46                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    47                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    48                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    49                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    50                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    51                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    52                           ; 
    53                           ; 
    54                           ; Code-generator required, PIC16F887 Definitions
    55                           ; 
    56                           ; SFR Addresses
    57  0000                     	;# 
    58  0001                     	;# 
    59  0002                     	;# 
    60  0003                     	;# 
    61  0004                     	;# 
    62  0005                     	;# 
    63  0006                     	;# 
    64  0007                     	;# 
    65  0008                     	;# 
    66  0009                     	;# 
    67  000A                     	;# 
    68  000B                     	;# 
    69  000C                     	;# 
    70  000D                     	;# 
    71  000E                     	;# 
    72  000E                     	;# 
    73  000F                     	;# 
    74  0010                     	;# 
    75  0011                     	;# 
    76  0012                     	;# 
    77  0013                     	;# 
    78  0014                     	;# 
    79  0015                     	;# 
    80  0015                     	;# 
    81  0016                     	;# 
    82  0017                     	;# 
    83  0018                     	;# 
    84  0019                     	;# 
    85  001A                     	;# 
    86  001B                     	;# 
    87  001B                     	;# 
    88  001C                     	;# 
    89  001D                     	;# 
    90  001E                     	;# 
    91  001F                     	;# 
    92  0081                     	;# 
    93  0085                     	;# 
    94  0086                     	;# 
    95  0087                     	;# 
    96  0088                     	;# 
    97  0089                     	;# 
    98  008C                     	;# 
    99  008D                     	;# 
   100  008E                     	;# 
   101  008F                     	;# 
   102  0090                     	;# 
   103  0091                     	;# 
   104  0092                     	;# 
   105  0093                     	;# 
   106  0093                     	;# 
   107  0093                     	;# 
   108  0094                     	;# 
   109  0095                     	;# 
   110  0096                     	;# 
   111  0097                     	;# 
   112  0098                     	;# 
   113  0099                     	;# 
   114  009A                     	;# 
   115  009B                     	;# 
   116  009C                     	;# 
   117  009D                     	;# 
   118  009E                     	;# 
   119  009F                     	;# 
   120  0105                     	;# 
   121  0107                     	;# 
   122  0108                     	;# 
   123  0109                     	;# 
   124  010C                     	;# 
   125  010C                     	;# 
   126  010D                     	;# 
   127  010E                     	;# 
   128  010F                     	;# 
   129  0185                     	;# 
   130  0187                     	;# 
   131  0188                     	;# 
   132  0189                     	;# 
   133  018C                     	;# 
   134  018D                     	;# 
   135  0000                     	;# 
   136  0001                     	;# 
   137  0002                     	;# 
   138  0003                     	;# 
   139  0004                     	;# 
   140  0005                     	;# 
   141  0006                     	;# 
   142  0007                     	;# 
   143  0008                     	;# 
   144  0009                     	;# 
   145  000A                     	;# 
   146  000B                     	;# 
   147  000C                     	;# 
   148  000D                     	;# 
   149  000E                     	;# 
   150  000E                     	;# 
   151  000F                     	;# 
   152  0010                     	;# 
   153  0011                     	;# 
   154  0012                     	;# 
   155  0013                     	;# 
   156  0014                     	;# 
   157  0015                     	;# 
   158  0015                     	;# 
   159  0016                     	;# 
   160  0017                     	;# 
   161  0018                     	;# 
   162  0019                     	;# 
   163  001A                     	;# 
   164  001B                     	;# 
   165  001B                     	;# 
   166  001C                     	;# 
   167  001D                     	;# 
   168  001E                     	;# 
   169  001F                     	;# 
   170  0081                     	;# 
   171  0085                     	;# 
   172  0086                     	;# 
   173  0087                     	;# 
   174  0088                     	;# 
   175  0089                     	;# 
   176  008C                     	;# 
   177  008D                     	;# 
   178  008E                     	;# 
   179  008F                     	;# 
   180  0090                     	;# 
   181  0091                     	;# 
   182  0092                     	;# 
   183  0093                     	;# 
   184  0093                     	;# 
   185  0093                     	;# 
   186  0094                     	;# 
   187  0095                     	;# 
   188  0096                     	;# 
   189  0097                     	;# 
   190  0098                     	;# 
   191  0099                     	;# 
   192  009A                     	;# 
   193  009B                     	;# 
   194  009C                     	;# 
   195  009D                     	;# 
   196  009E                     	;# 
   197  009F                     	;# 
   198  0105                     	;# 
   199  0107                     	;# 
   200  0108                     	;# 
   201  0109                     	;# 
   202  010C                     	;# 
   203  010C                     	;# 
   204  010D                     	;# 
   205  010E                     	;# 
   206  010F                     	;# 
   207  0185                     	;# 
   208  0187                     	;# 
   209  0188                     	;# 
   210  0189                     	;# 
   211  018C                     	;# 
   212  018D                     	;# 
   213                           
   214                           	psect	idataBANK0
   215  01E6                     __pidataBANK0:
   216                           
   217                           ;initializer for _display
   218  01E6  343F               	retlw	63
   219  01E7  3406               	retlw	6
   220  01E8  345B               	retlw	91
   221  01E9  344F               	retlw	79
   222  01EA  3466               	retlw	102
   223  01EB  346D               	retlw	109
   224  01EC  347D               	retlw	125
   225  01ED  3407               	retlw	7
   226  01EE  347F               	retlw	127
   227  01EF  346F               	retlw	111
   228                           
   229                           	psect	nvCOMMON
   230  0076                     __pnvCOMMON:
   231  0076                     _unidad:
   232  0076                     	ds	1
   233  0077                     _cont:
   234  0077                     	ds	1
   235                           
   236                           	psect	nvBANK0
   237  0035                     __pnvBANK0:
   238  0035                     _decena:
   239  0035                     	ds	1
   240  0036                     _centena:
   241  0036                     	ds	1
   242  0008                     _PORTD	set	8
   243  0006                     _PORTB	set	6
   244  0005                     _PORTA	set	5
   245  0006                     _PORTBbits	set	6
   246  0001                     _TMR0	set	1
   247  000B                     _INTCONbits	set	11
   248  0007                     _PORTC	set	7
   249  0008                     _PORTDbits	set	8
   250  0058                     _RBIF	set	88
   251  005A                     _T0IF	set	90
   252  0096                     _IOCBbits	set	150
   253  0095                     _WPUB	set	149
   254  0081                     _OPTION_REGbits	set	129
   255  008F                     _OSCCONbits	set	143
   256  0088                     _TRISD	set	136
   257  0087                     _TRISC	set	135
   258  0085                     _TRISA	set	133
   259  0086                     _TRISBbits	set	134
   260  0189                     _ANSELH	set	393
   261  0188                     _ANSEL	set	392
   262                           
   263                           	psect	cinit
   264  0011                     start_initialization:	
   265                           ; #config settings
   266                           
   267  0011                     __initialization:
   268                           
   269                           ; Initialize objects allocated to BANK0
   270  0011  1383               	bcf	3,7	;select IRP bank0
   271  0012  3035               	movlw	low (__pdataBANK0+10)
   272  0013  00FD               	movwf	btemp+-1
   273  0014  3001               	movlw	high __pidataBANK0
   274  0015  00FE               	movwf	btemp
   275  0016  30E6               	movlw	low __pidataBANK0
   276  0017  00FF               	movwf	btemp+1
   277  0018  302B               	movlw	low __pdataBANK0
   278  0019  0084               	movwf	4
   279  001A  120A  118A  21D7  120A  118A  	fcall	init_ram0
   280                           
   281                           ; Clear objects allocated to COMMON
   282  001F  01F8               	clrf	__pbssCOMMON& (0+127)
   283  0020  01F9               	clrf	(__pbssCOMMON+1)& (0+127)
   284  0021                     end_of_initialization:	
   285                           ;End of C runtime variable initialization code
   286                           
   287  0021                     __end_of__initialization:
   288  0021  0183               	clrf	3
   289  0022  120A  118A  29BF   	ljmp	_main	;jump to C main() function
   290                           
   291                           	psect	bssCOMMON
   292  0078                     __pbssCOMMON:
   293  0078                     _multi:
   294  0078                     	ds	2
   295                           
   296                           	psect	dataBANK0
   297  002B                     __pdataBANK0:
   298  002B                     _display:
   299  002B                     	ds	10
   300                           
   301                           	psect	inittext
   302  01D3                     init_fetch0:	
   303                           ;	Called with low address in FSR and high address in W
   304                           
   305  01D3  087E               	movf	btemp,w
   306  01D4  008A               	movwf	10
   307  01D5  087F               	movf	btemp+1,w
   308  01D6  0082               	movwf	2
   309  01D7                     init_ram0:	
   310                           ;Called with:
   311                           ;	high address of idata address in btemp 
   312                           ;	low address of idata address in btemp+1 
   313                           ;	low address of data in FSR
   314                           ;	high address + 1 of data in btemp-1
   315                           
   316  01D7  120A  118A  21D3  120A  118A  	fcall	init_fetch0
   317  01DC  0080               	movwf	0
   318  01DD  0A84               	incf	4,f
   319  01DE  0804               	movf	4,w
   320  01DF  067D               	xorwf	btemp+-1,w
   321  01E0  1903               	btfsc	3,2
   322  01E1  3400               	retlw	0
   323  01E2  0AFF               	incf	btemp+1,f
   324  01E3  1903               	btfsc	3,2
   325  01E4  0AFE               	incf	btemp,f
   326  01E5  29D7               	goto	init_ram0
   327                           
   328                           	psect	cstackCOMMON
   329  0070                     __pcstackCOMMON:
   330  0070                     ?_setup:
   331  0070                     ?_division:	
   332                           ; 1 bytes @ 0x0
   333                           
   334  0070                     ?_isr:	
   335                           ; 1 bytes @ 0x0
   336                           
   337  0070                     ??_isr:	
   338                           ; 1 bytes @ 0x0
   339                           
   340  0070                     ?_main:	
   341                           ; 1 bytes @ 0x0
   342                           
   343                           
   344                           ; 1 bytes @ 0x0
   345  0070                     	ds	4
   346  0074                     ??_setup:
   347  0074                     ??___awdiv:	
   348                           ; 1 bytes @ 0x4
   349                           
   350  0074                     ??___awmod:	
   351                           ; 1 bytes @ 0x4
   352                           
   353                           
   354                           ; 1 bytes @ 0x4
   355  0074                     	ds	1
   356  0075                     ??_main:
   357                           
   358                           ; 1 bytes @ 0x5
   359  0075                     	ds	1
   360                           
   361                           	psect	cstackBANK0
   362  0020                     __pcstackBANK0:
   363  0020                     ?___awdiv:
   364  0020                     ?___awmod:	
   365                           ; 2 bytes @ 0x0
   366                           
   367  0020                     ___awdiv@divisor:	
   368                           ; 2 bytes @ 0x0
   369                           
   370  0020                     ___awmod@divisor:	
   371                           ; 2 bytes @ 0x0
   372                           
   373                           
   374                           ; 2 bytes @ 0x0
   375  0020                     	ds	2
   376  0022                     ___awdiv@dividend:
   377  0022                     ___awmod@dividend:	
   378                           ; 2 bytes @ 0x2
   379                           
   380                           
   381                           ; 2 bytes @ 0x2
   382  0022                     	ds	2
   383  0024                     ___awdiv@counter:
   384  0024                     ___awmod@counter:	
   385                           ; 1 bytes @ 0x4
   386                           
   387                           
   388                           ; 1 bytes @ 0x4
   389  0024                     	ds	1
   390  0025                     ___awdiv@sign:
   391  0025                     ___awmod@sign:	
   392                           ; 1 bytes @ 0x5
   393                           
   394                           
   395                           ; 1 bytes @ 0x5
   396  0025                     	ds	1
   397  0026                     ___awdiv@quotient:
   398                           
   399                           ; 2 bytes @ 0x6
   400  0026                     	ds	2
   401  0028                     ??_division:
   402                           
   403                           ; 1 bytes @ 0x8
   404  0028                     	ds	3
   405                           
   406                           	psect	maintext
   407  01BF                     __pmaintext:	
   408 ;;
   409 ;;Main: autosize = 0, tempsize = 1, incstack = 0, save=0
   410 ;;
   411 ;; *************** function _main *****************
   412 ;; Defined at:
   413 ;;		line 76 in file "main7.c"
   414 ;; Parameters:    Size  Location     Type
   415 ;;		None
   416 ;; Auto vars:     Size  Location     Type
   417 ;;		None
   418 ;; Return value:  Size  Location     Type
   419 ;;                  1    wreg      void 
   420 ;; Registers used:
   421 ;;		wreg, status,2, status,0, pclath, cstack
   422 ;; Tracked objects:
   423 ;;		On entry : B00/0
   424 ;;		On exit  : 0/0
   425 ;;		Unchanged: 0/0
   426 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   427 ;;      Params:         0       0       0       0       0
   428 ;;      Locals:         0       0       0       0       0
   429 ;;      Temps:          1       0       0       0       0
   430 ;;      Totals:         1       0       0       0       0
   431 ;;Total ram usage:        1 bytes
   432 ;; Hardware stack levels required when called:    3
   433 ;; This function calls:
   434 ;;		_division
   435 ;;		_setup
   436 ;; This function is called by:
   437 ;;		Startup code after reset
   438 ;; This function uses a non-reentrant model
   439 ;;
   440                           
   441                           
   442                           ;psect for function _main
   443  01BF                     _main:
   444  01BF                     l1059:	
   445                           ;incstack = 0
   446                           ; Regs used in _main: [wreg+status,2+status,0+pclath+cstack]
   447                           
   448                           
   449                           ;main7.c: 77:     setup();
   450  01BF  120A  118A  2198  120A  118A  	fcall	_setup
   451  01C4                     l1061:
   452                           
   453                           ;main7.c: 79:     {;main7.c: 80:         cont= PORTA;
   454  01C4  1283               	bcf	3,5	;RP0=0, select bank0
   455  01C5  1303               	bcf	3,6	;RP1=0, select bank0
   456  01C6  0805               	movf	5,w	;volatile
   457  01C7  00F5               	movwf	??_main
   458  01C8  0875               	movf	??_main,w
   459  01C9  00F7               	movwf	_cont
   460  01CA                     l1063:
   461                           
   462                           ;main7.c: 81:         division();
   463  01CA  120A  118A  208E  120A  118A  	fcall	_division
   464  01CF  29C4               	goto	l1061
   465  01D0  120A  118A  280E   	ljmp	start
   466  01D3                     __end_of_main:
   467                           
   468                           	psect	text1
   469  0198                     __ptext1:	
   470 ;; *************** function _setup *****************
   471 ;; Defined at:
   472 ;;		line 87 in file "main7.c"
   473 ;; Parameters:    Size  Location     Type
   474 ;;		None
   475 ;; Auto vars:     Size  Location     Type
   476 ;;		None
   477 ;; Return value:  Size  Location     Type
   478 ;;                  1    wreg      void 
   479 ;; Registers used:
   480 ;;		wreg, status,2
   481 ;; Tracked objects:
   482 ;;		On entry : 0/0
   483 ;;		On exit  : 0/0
   484 ;;		Unchanged: 0/0
   485 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   486 ;;      Params:         0       0       0       0       0
   487 ;;      Locals:         0       0       0       0       0
   488 ;;      Temps:          0       0       0       0       0
   489 ;;      Totals:         0       0       0       0       0
   490 ;;Total ram usage:        0 bytes
   491 ;; Hardware stack levels used:    1
   492 ;; Hardware stack levels required when called:    1
   493 ;; This function calls:
   494 ;;		Nothing
   495 ;; This function is called by:
   496 ;;		_main
   497 ;; This function uses a non-reentrant model
   498 ;;
   499                           
   500                           
   501                           ;psect for function _setup
   502  0198                     _setup:
   503  0198                     l755:	
   504                           ;incstack = 0
   505                           ; Regs used in _setup: [wreg+status,2]
   506                           
   507                           
   508                           ;main7.c: 89:     ANSEL = 0x00;
   509  0198  1683               	bsf	3,5	;RP0=1, select bank3
   510  0199  1703               	bsf	3,6	;RP1=1, select bank3
   511  019A  0188               	clrf	8	;volatile
   512                           
   513                           ;main7.c: 90:     ANSELH = 0x00;
   514  019B  0189               	clrf	9	;volatile
   515  019C                     l757:
   516                           
   517                           ;main7.c: 92:     TRISBbits.TRISB0 = 1;
   518  019C  1683               	bsf	3,5	;RP0=1, select bank1
   519  019D  1303               	bcf	3,6	;RP1=0, select bank1
   520  019E  1406               	bsf	6,0	;volatile
   521  019F                     l759:
   522                           
   523                           ;main7.c: 93:     TRISBbits.TRISB1 = 1;
   524  019F  1486               	bsf	6,1	;volatile
   525                           
   526                           ;main7.c: 94:     TRISA = 0x00;
   527  01A0  0185               	clrf	5	;volatile
   528                           
   529                           ;main7.c: 95:     TRISC = 0x00;
   530  01A1  0187               	clrf	7	;volatile
   531                           
   532                           ;main7.c: 96:     TRISD = 0x00;
   533  01A2  0188               	clrf	8	;volatile
   534                           
   535                           ;main7.c: 99:     PORTA = 0x00;
   536  01A3  1283               	bcf	3,5	;RP0=0, select bank0
   537  01A4  1303               	bcf	3,6	;RP1=0, select bank0
   538  01A5  0185               	clrf	5	;volatile
   539                           
   540                           ;main7.c: 100:     PORTB = 0x00;
   541  01A6  0186               	clrf	6	;volatile
   542                           
   543                           ;main7.c: 101:     PORTC = 0x00;
   544  01A7  0187               	clrf	7	;volatile
   545                           
   546                           ;main7.c: 102:     PORTD = 0x00;
   547  01A8  0188               	clrf	8	;volatile
   548  01A9                     l761:
   549                           
   550                           ;main7.c: 105:     OSCCONbits.IRCF2 = 0;
   551  01A9  1683               	bsf	3,5	;RP0=1, select bank1
   552  01AA  1303               	bcf	3,6	;RP1=0, select bank1
   553  01AB  130F               	bcf	15,6	;volatile
   554  01AC                     l763:
   555                           
   556                           ;main7.c: 106:     OSCCONbits.IRCF1 = 1;
   557  01AC  168F               	bsf	15,5	;volatile
   558  01AD                     l765:
   559                           
   560                           ;main7.c: 107:     OSCCONbits.IRCF0 = 0;
   561  01AD  120F               	bcf	15,4	;volatile
   562  01AE                     l767:
   563                           
   564                           ;main7.c: 108:     OSCCONbits.SCS = 1;
   565  01AE  140F               	bsf	15,0	;volatile
   566  01AF                     l769:
   567                           
   568                           ;main7.c: 110:     OPTION_REGbits.T0CS = 0;
   569  01AF  1281               	bcf	1,5	;volatile
   570  01B0                     l771:
   571                           
   572                           ;main7.c: 111:     OPTION_REGbits.PSA = 0;
   573  01B0  1181               	bcf	1,3	;volatile
   574  01B1                     l773:
   575                           
   576                           ;main7.c: 112:     OPTION_REGbits.PS2 = 1;
   577  01B1  1501               	bsf	1,2	;volatile
   578  01B2                     l775:
   579                           
   580                           ;main7.c: 113:     OPTION_REGbits.PS1 = 1;
   581  01B2  1481               	bsf	1,1	;volatile
   582  01B3                     l777:
   583                           
   584                           ;main7.c: 114:     OPTION_REGbits.PS0 = 1;
   585  01B3  1401               	bsf	1,0	;volatile
   586  01B4                     l779:
   587                           
   588                           ;main7.c: 116:     INTCONbits.GIE = 1;
   589  01B4  178B               	bsf	11,7	;volatile
   590  01B5                     l781:
   591                           
   592                           ;main7.c: 117:     INTCONbits.RBIE = 1;
   593  01B5  158B               	bsf	11,3	;volatile
   594  01B6                     l783:
   595                           
   596                           ;main7.c: 118:     INTCONbits.RBIF = 0;
   597  01B6  100B               	bcf	11,0	;volatile
   598  01B7                     l785:
   599                           
   600                           ;main7.c: 119:     INTCONbits.T0IE = 1;
   601  01B7  168B               	bsf	11,5	;volatile
   602  01B8                     l787:
   603                           
   604                           ;main7.c: 120:     INTCONbits.T0IF = 0;
   605  01B8  110B               	bcf	11,2	;volatile
   606  01B9                     l789:
   607                           
   608                           ;main7.c: 122:     OPTION_REGbits.nRBPU = 0;
   609  01B9  1381               	bcf	1,7	;volatile
   610  01BA                     l791:
   611                           
   612                           ;main7.c: 123:     WPUB = 0b00000011;
   613  01BA  3003               	movlw	3
   614  01BB  0095               	movwf	21	;volatile
   615  01BC                     l793:
   616                           
   617                           ;main7.c: 124:     IOCBbits.IOCB0 = 1;
   618  01BC  1416               	bsf	22,0	;volatile
   619  01BD                     l795:
   620                           
   621                           ;main7.c: 125:     IOCBbits.IOCB1 = 1;
   622  01BD  1496               	bsf	22,1	;volatile
   623  01BE                     l78:
   624  01BE  0008               	return
   625  01BF                     __end_of_setup:
   626                           
   627                           	psect	text2
   628  008E                     __ptext2:	
   629 ;; *************** function _division *****************
   630 ;; Defined at:
   631 ;;		line 129 in file "main7.c"
   632 ;; Parameters:    Size  Location     Type
   633 ;;		None
   634 ;; Auto vars:     Size  Location     Type
   635 ;;		None
   636 ;; Return value:  Size  Location     Type
   637 ;;                  1    wreg      unsigned char 
   638 ;; Registers used:
   639 ;;		wreg, status,2, status,0, pclath, cstack
   640 ;; Tracked objects:
   641 ;;		On entry : 0/0
   642 ;;		On exit  : 0/0
   643 ;;		Unchanged: 0/0
   644 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   645 ;;      Params:         0       0       0       0       0
   646 ;;      Locals:         0       0       0       0       0
   647 ;;      Temps:          0       3       0       0       0
   648 ;;      Totals:         0       3       0       0       0
   649 ;;Total ram usage:        3 bytes
   650 ;; Hardware stack levels used:    1
   651 ;; Hardware stack levels required when called:    2
   652 ;; This function calls:
   653 ;;		___awdiv
   654 ;;		___awmod
   655 ;; This function is called by:
   656 ;;		_main
   657 ;; This function uses a non-reentrant model
   658 ;;
   659                           
   660                           
   661                           ;psect for function _division
   662  008E                     _division:
   663  008E                     l1057:	
   664                           ;incstack = 0
   665                           ; Regs used in _division: [wreg+status,2+status,0+pclath+cstack]
   666                           
   667                           
   668                           ;main7.c: 130:     centena = cont/100;
   669  008E  3064               	movlw	100
   670  008F  1283               	bcf	3,5	;RP0=0, select bank0
   671  0090  1303               	bcf	3,6	;RP1=0, select bank0
   672  0091  00A0               	movwf	___awdiv@divisor
   673  0092  3000               	movlw	0
   674  0093  00A1               	movwf	___awdiv@divisor+1
   675  0094  0877               	movf	_cont,w
   676  0095  00A8               	movwf	??_division
   677  0096  01A9               	clrf	??_division+1
   678  0097  0828               	movf	??_division,w
   679  0098  00A2               	movwf	___awdiv@dividend
   680  0099  0829               	movf	??_division+1,w
   681  009A  00A3               	movwf	___awdiv@dividend+1
   682  009B  120A  118A  2025  120A  118A  	fcall	___awdiv
   683  00A0  1283               	bcf	3,5	;RP0=0, select bank0
   684  00A1  1303               	bcf	3,6	;RP1=0, select bank0
   685  00A2  0820               	movf	?___awdiv,w
   686  00A3  00AA               	movwf	??_division+2
   687  00A4  082A               	movf	??_division+2,w
   688  00A5  00B6               	movwf	_centena
   689                           
   690                           ;main7.c: 131:     unidad = cont%100;
   691  00A6  3064               	movlw	100
   692  00A7  00A0               	movwf	___awmod@divisor
   693  00A8  3000               	movlw	0
   694  00A9  00A1               	movwf	___awmod@divisor+1
   695  00AA  0877               	movf	_cont,w
   696  00AB  00A8               	movwf	??_division
   697  00AC  01A9               	clrf	??_division+1
   698  00AD  0828               	movf	??_division,w
   699  00AE  00A2               	movwf	___awmod@dividend
   700  00AF  0829               	movf	??_division+1,w
   701  00B0  00A3               	movwf	___awmod@dividend+1
   702  00B1  120A  118A  20E9  120A  118A  	fcall	___awmod
   703  00B6  1283               	bcf	3,5	;RP0=0, select bank0
   704  00B7  1303               	bcf	3,6	;RP1=0, select bank0
   705  00B8  0820               	movf	?___awmod,w
   706  00B9  00AA               	movwf	??_division+2
   707  00BA  082A               	movf	??_division+2,w
   708  00BB  00F6               	movwf	_unidad
   709                           
   710                           ;main7.c: 132:     decena = unidad/10;
   711  00BC  300A               	movlw	10
   712  00BD  00A0               	movwf	___awdiv@divisor
   713  00BE  3000               	movlw	0
   714  00BF  00A1               	movwf	___awdiv@divisor+1
   715  00C0  0876               	movf	_unidad,w
   716  00C1  00A8               	movwf	??_division
   717  00C2  01A9               	clrf	??_division+1
   718  00C3  0828               	movf	??_division,w
   719  00C4  00A2               	movwf	___awdiv@dividend
   720  00C5  0829               	movf	??_division+1,w
   721  00C6  00A3               	movwf	___awdiv@dividend+1
   722  00C7  120A  118A  2025  120A  118A  	fcall	___awdiv
   723  00CC  1283               	bcf	3,5	;RP0=0, select bank0
   724  00CD  1303               	bcf	3,6	;RP1=0, select bank0
   725  00CE  0820               	movf	?___awdiv,w
   726  00CF  00AA               	movwf	??_division+2
   727  00D0  082A               	movf	??_division+2,w
   728  00D1  00B5               	movwf	_decena
   729                           
   730                           ;main7.c: 133:     unidad = unidad%10;
   731  00D2  300A               	movlw	10
   732  00D3  00A0               	movwf	___awmod@divisor
   733  00D4  3000               	movlw	0
   734  00D5  00A1               	movwf	___awmod@divisor+1
   735  00D6  0876               	movf	_unidad,w
   736  00D7  00A8               	movwf	??_division
   737  00D8  01A9               	clrf	??_division+1
   738  00D9  0828               	movf	??_division,w
   739  00DA  00A2               	movwf	___awmod@dividend
   740  00DB  0829               	movf	??_division+1,w
   741  00DC  00A3               	movwf	___awmod@dividend+1
   742  00DD  120A  118A  20E9  120A  118A  	fcall	___awmod
   743  00E2  1283               	bcf	3,5	;RP0=0, select bank0
   744  00E3  1303               	bcf	3,6	;RP1=0, select bank0
   745  00E4  0820               	movf	?___awmod,w
   746  00E5  00AA               	movwf	??_division+2
   747  00E6  082A               	movf	??_division+2,w
   748  00E7  00F6               	movwf	_unidad
   749  00E8                     l81:
   750  00E8  0008               	return
   751  00E9                     __end_of_division:
   752                           
   753                           	psect	text3
   754  00E9                     __ptext3:	
   755 ;; *************** function ___awmod *****************
   756 ;; Defined at:
   757 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awmod.c"
   758 ;; Parameters:    Size  Location     Type
   759 ;;  divisor         2    0[BANK0 ] int 
   760 ;;  dividend        2    2[BANK0 ] int 
   761 ;; Auto vars:     Size  Location     Type
   762 ;;  sign            1    5[BANK0 ] unsigned char 
   763 ;;  counter         1    4[BANK0 ] unsigned char 
   764 ;; Return value:  Size  Location     Type
   765 ;;                  2    0[BANK0 ] int 
   766 ;; Registers used:
   767 ;;		wreg, status,2, status,0
   768 ;; Tracked objects:
   769 ;;		On entry : 0/0
   770 ;;		On exit  : 0/0
   771 ;;		Unchanged: 0/0
   772 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   773 ;;      Params:         0       4       0       0       0
   774 ;;      Locals:         0       2       0       0       0
   775 ;;      Temps:          1       0       0       0       0
   776 ;;      Totals:         1       6       0       0       0
   777 ;;Total ram usage:        7 bytes
   778 ;; Hardware stack levels used:    1
   779 ;; Hardware stack levels required when called:    1
   780 ;; This function calls:
   781 ;;		Nothing
   782 ;; This function is called by:
   783 ;;		_division
   784 ;; This function uses a non-reentrant model
   785 ;;
   786                           
   787                           
   788                           ;psect for function ___awmod
   789  00E9                     ___awmod:
   790  00E9                     l1019:	
   791                           ;incstack = 0
   792                           ; Regs used in ___awmod: [wreg+status,2+status,0]
   793                           
   794  00E9  1283               	bcf	3,5	;RP0=0, select bank0
   795  00EA  1303               	bcf	3,6	;RP1=0, select bank0
   796  00EB  01A5               	clrf	___awmod@sign
   797  00EC                     l1021:
   798  00EC  1FA3               	btfss	___awmod@dividend+1,7
   799  00ED  28EF               	goto	u611
   800  00EE  28F0               	goto	u610
   801  00EF                     u611:
   802  00EF  28F7               	goto	l1027
   803  00F0                     u610:
   804  00F0                     l1023:
   805  00F0  09A2               	comf	___awmod@dividend,f
   806  00F1  09A3               	comf	___awmod@dividend+1,f
   807  00F2  0AA2               	incf	___awmod@dividend,f
   808  00F3  1903               	skipnz
   809  00F4  0AA3               	incf	___awmod@dividend+1,f
   810  00F5                     l1025:
   811  00F5  01A5               	clrf	___awmod@sign
   812  00F6  0AA5               	incf	___awmod@sign,f
   813  00F7                     l1027:
   814  00F7  1FA1               	btfss	___awmod@divisor+1,7
   815  00F8  28FA               	goto	u621
   816  00F9  28FB               	goto	u620
   817  00FA                     u621:
   818  00FA  2900               	goto	l1031
   819  00FB                     u620:
   820  00FB                     l1029:
   821  00FB  09A0               	comf	___awmod@divisor,f
   822  00FC  09A1               	comf	___awmod@divisor+1,f
   823  00FD  0AA0               	incf	___awmod@divisor,f
   824  00FE  1903               	skipnz
   825  00FF  0AA1               	incf	___awmod@divisor+1,f
   826  0100                     l1031:
   827  0100  0820               	movf	___awmod@divisor,w
   828  0101  0421               	iorwf	___awmod@divisor+1,w
   829  0102  1903               	btfsc	3,2
   830  0103  2905               	goto	u631
   831  0104  2906               	goto	u630
   832  0105                     u631:
   833  0105  2935               	goto	l1049
   834  0106                     u630:
   835  0106                     l1033:
   836  0106  01A4               	clrf	___awmod@counter
   837  0107  0AA4               	incf	___awmod@counter,f
   838  0108  2914               	goto	l1039
   839  0109                     l1035:
   840  0109  3001               	movlw	1
   841  010A                     u645:
   842  010A  1003               	clrc
   843  010B  0DA0               	rlf	___awmod@divisor,f
   844  010C  0DA1               	rlf	___awmod@divisor+1,f
   845  010D  3EFF               	addlw	-1
   846  010E  1D03               	skipz
   847  010F  290A               	goto	u645
   848  0110                     l1037:
   849  0110  3001               	movlw	1
   850  0111  00F4               	movwf	??___awmod
   851  0112  0874               	movf	??___awmod,w
   852  0113  07A4               	addwf	___awmod@counter,f
   853  0114                     l1039:
   854  0114  1FA1               	btfss	___awmod@divisor+1,7
   855  0115  2917               	goto	u651
   856  0116  2918               	goto	u650
   857  0117                     u651:
   858  0117  2909               	goto	l1035
   859  0118                     u650:
   860  0118                     l1041:
   861  0118  0821               	movf	___awmod@divisor+1,w
   862  0119  0223               	subwf	___awmod@dividend+1,w
   863  011A  1D03               	skipz
   864  011B  291E               	goto	u665
   865  011C  0820               	movf	___awmod@divisor,w
   866  011D  0222               	subwf	___awmod@dividend,w
   867  011E                     u665:
   868  011E  1C03               	skipc
   869  011F  2921               	goto	u661
   870  0120  2922               	goto	u660
   871  0121                     u661:
   872  0121  2928               	goto	l1045
   873  0122                     u660:
   874  0122                     l1043:
   875  0122  0820               	movf	___awmod@divisor,w
   876  0123  02A2               	subwf	___awmod@dividend,f
   877  0124  0821               	movf	___awmod@divisor+1,w
   878  0125  1C03               	skipc
   879  0126  03A3               	decf	___awmod@dividend+1,f
   880  0127  02A3               	subwf	___awmod@dividend+1,f
   881  0128                     l1045:
   882  0128  3001               	movlw	1
   883  0129                     u675:
   884  0129  1003               	clrc
   885  012A  0CA1               	rrf	___awmod@divisor+1,f
   886  012B  0CA0               	rrf	___awmod@divisor,f
   887  012C  3EFF               	addlw	-1
   888  012D  1D03               	skipz
   889  012E  2929               	goto	u675
   890  012F                     l1047:
   891  012F  3001               	movlw	1
   892  0130  02A4               	subwf	___awmod@counter,f
   893  0131  1D03               	btfss	3,2
   894  0132  2934               	goto	u681
   895  0133  2935               	goto	u680
   896  0134                     u681:
   897  0134  2918               	goto	l1041
   898  0135                     u680:
   899  0135                     l1049:
   900  0135  0825               	movf	___awmod@sign,w
   901  0136  1903               	btfsc	3,2
   902  0137  2939               	goto	u691
   903  0138  293A               	goto	u690
   904  0139                     u691:
   905  0139  293F               	goto	l1053
   906  013A                     u690:
   907  013A                     l1051:
   908  013A  09A2               	comf	___awmod@dividend,f
   909  013B  09A3               	comf	___awmod@dividend+1,f
   910  013C  0AA2               	incf	___awmod@dividend,f
   911  013D  1903               	skipnz
   912  013E  0AA3               	incf	___awmod@dividend+1,f
   913  013F                     l1053:
   914  013F  0823               	movf	___awmod@dividend+1,w
   915  0140  00A1               	movwf	?___awmod+1
   916  0141  0822               	movf	___awmod@dividend,w
   917  0142  00A0               	movwf	?___awmod
   918  0143                     l333:
   919  0143  0008               	return
   920  0144                     __end_of___awmod:
   921                           
   922                           	psect	text4
   923  0025                     __ptext4:	
   924 ;; *************** function ___awdiv *****************
   925 ;; Defined at:
   926 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.31\pic\sources\c90\common\awdiv.c"
   927 ;; Parameters:    Size  Location     Type
   928 ;;  divisor         2    0[BANK0 ] int 
   929 ;;  dividend        2    2[BANK0 ] int 
   930 ;; Auto vars:     Size  Location     Type
   931 ;;  quotient        2    6[BANK0 ] int 
   932 ;;  sign            1    5[BANK0 ] unsigned char 
   933 ;;  counter         1    4[BANK0 ] unsigned char 
   934 ;; Return value:  Size  Location     Type
   935 ;;                  2    0[BANK0 ] int 
   936 ;; Registers used:
   937 ;;		wreg, status,2, status,0
   938 ;; Tracked objects:
   939 ;;		On entry : 0/0
   940 ;;		On exit  : 0/0
   941 ;;		Unchanged: 0/0
   942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   943 ;;      Params:         0       4       0       0       0
   944 ;;      Locals:         0       4       0       0       0
   945 ;;      Temps:          1       0       0       0       0
   946 ;;      Totals:         1       8       0       0       0
   947 ;;Total ram usage:        9 bytes
   948 ;; Hardware stack levels used:    1
   949 ;; Hardware stack levels required when called:    1
   950 ;; This function calls:
   951 ;;		Nothing
   952 ;; This function is called by:
   953 ;;		_division
   954 ;; This function uses a non-reentrant model
   955 ;;
   956                           
   957                           
   958                           ;psect for function ___awdiv
   959  0025                     ___awdiv:
   960  0025                     l975:	
   961                           ;incstack = 0
   962                           ; Regs used in ___awdiv: [wreg+status,2+status,0]
   963                           
   964  0025  1283               	bcf	3,5	;RP0=0, select bank0
   965  0026  1303               	bcf	3,6	;RP1=0, select bank0
   966  0027  01A5               	clrf	___awdiv@sign
   967  0028                     l977:
   968  0028  1FA1               	btfss	___awdiv@divisor+1,7
   969  0029  282B               	goto	u511
   970  002A  282C               	goto	u510
   971  002B                     u511:
   972  002B  2833               	goto	l983
   973  002C                     u510:
   974  002C                     l979:
   975  002C  09A0               	comf	___awdiv@divisor,f
   976  002D  09A1               	comf	___awdiv@divisor+1,f
   977  002E  0AA0               	incf	___awdiv@divisor,f
   978  002F  1903               	skipnz
   979  0030  0AA1               	incf	___awdiv@divisor+1,f
   980  0031                     l981:
   981  0031  01A5               	clrf	___awdiv@sign
   982  0032  0AA5               	incf	___awdiv@sign,f
   983  0033                     l983:
   984  0033  1FA3               	btfss	___awdiv@dividend+1,7
   985  0034  2836               	goto	u521
   986  0035  2837               	goto	u520
   987  0036                     u521:
   988  0036  2840               	goto	l989
   989  0037                     u520:
   990  0037                     l985:
   991  0037  09A2               	comf	___awdiv@dividend,f
   992  0038  09A3               	comf	___awdiv@dividend+1,f
   993  0039  0AA2               	incf	___awdiv@dividend,f
   994  003A  1903               	skipnz
   995  003B  0AA3               	incf	___awdiv@dividend+1,f
   996  003C                     l987:
   997  003C  3001               	movlw	1
   998  003D  00F4               	movwf	??___awdiv
   999  003E  0874               	movf	??___awdiv,w
  1000  003F  06A5               	xorwf	___awdiv@sign,f
  1001  0040                     l989:
  1002  0040  01A6               	clrf	___awdiv@quotient
  1003  0041  01A7               	clrf	___awdiv@quotient+1
  1004  0042                     l991:
  1005  0042  0820               	movf	___awdiv@divisor,w
  1006  0043  0421               	iorwf	___awdiv@divisor+1,w
  1007  0044  1903               	btfsc	3,2
  1008  0045  2847               	goto	u531
  1009  0046  2848               	goto	u530
  1010  0047                     u531:
  1011  0047  287F               	goto	l1011
  1012  0048                     u530:
  1013  0048                     l993:
  1014  0048  01A4               	clrf	___awdiv@counter
  1015  0049  0AA4               	incf	___awdiv@counter,f
  1016  004A  2856               	goto	l999
  1017  004B                     l995:
  1018  004B  3001               	movlw	1
  1019  004C                     u545:
  1020  004C  1003               	clrc
  1021  004D  0DA0               	rlf	___awdiv@divisor,f
  1022  004E  0DA1               	rlf	___awdiv@divisor+1,f
  1023  004F  3EFF               	addlw	-1
  1024  0050  1D03               	skipz
  1025  0051  284C               	goto	u545
  1026  0052                     l997:
  1027  0052  3001               	movlw	1
  1028  0053  00F4               	movwf	??___awdiv
  1029  0054  0874               	movf	??___awdiv,w
  1030  0055  07A4               	addwf	___awdiv@counter,f
  1031  0056                     l999:
  1032  0056  1FA1               	btfss	___awdiv@divisor+1,7
  1033  0057  2859               	goto	u551
  1034  0058  285A               	goto	u550
  1035  0059                     u551:
  1036  0059  284B               	goto	l995
  1037  005A                     u550:
  1038  005A                     l1001:
  1039  005A  3001               	movlw	1
  1040  005B                     u565:
  1041  005B  1003               	clrc
  1042  005C  0DA6               	rlf	___awdiv@quotient,f
  1043  005D  0DA7               	rlf	___awdiv@quotient+1,f
  1044  005E  3EFF               	addlw	-1
  1045  005F  1D03               	skipz
  1046  0060  285B               	goto	u565
  1047  0061  0821               	movf	___awdiv@divisor+1,w
  1048  0062  0223               	subwf	___awdiv@dividend+1,w
  1049  0063  1D03               	skipz
  1050  0064  2867               	goto	u575
  1051  0065  0820               	movf	___awdiv@divisor,w
  1052  0066  0222               	subwf	___awdiv@dividend,w
  1053  0067                     u575:
  1054  0067  1C03               	skipc
  1055  0068  286A               	goto	u571
  1056  0069  286B               	goto	u570
  1057  006A                     u571:
  1058  006A  2872               	goto	l1007
  1059  006B                     u570:
  1060  006B                     l1003:
  1061  006B  0820               	movf	___awdiv@divisor,w
  1062  006C  02A2               	subwf	___awdiv@dividend,f
  1063  006D  0821               	movf	___awdiv@divisor+1,w
  1064  006E  1C03               	skipc
  1065  006F  03A3               	decf	___awdiv@dividend+1,f
  1066  0070  02A3               	subwf	___awdiv@dividend+1,f
  1067  0071                     l1005:
  1068  0071  1426               	bsf	___awdiv@quotient,0
  1069  0072                     l1007:
  1070  0072  3001               	movlw	1
  1071  0073                     u585:
  1072  0073  1003               	clrc
  1073  0074  0CA1               	rrf	___awdiv@divisor+1,f
  1074  0075  0CA0               	rrf	___awdiv@divisor,f
  1075  0076  3EFF               	addlw	-1
  1076  0077  1D03               	skipz
  1077  0078  2873               	goto	u585
  1078  0079                     l1009:
  1079  0079  3001               	movlw	1
  1080  007A  02A4               	subwf	___awdiv@counter,f
  1081  007B  1D03               	btfss	3,2
  1082  007C  287E               	goto	u591
  1083  007D  287F               	goto	u590
  1084  007E                     u591:
  1085  007E  285A               	goto	l1001
  1086  007F                     u590:
  1087  007F                     l1011:
  1088  007F  0825               	movf	___awdiv@sign,w
  1089  0080  1903               	btfsc	3,2
  1090  0081  2883               	goto	u601
  1091  0082  2884               	goto	u600
  1092  0083                     u601:
  1093  0083  2889               	goto	l1015
  1094  0084                     u600:
  1095  0084                     l1013:
  1096  0084  09A6               	comf	___awdiv@quotient,f
  1097  0085  09A7               	comf	___awdiv@quotient+1,f
  1098  0086  0AA6               	incf	___awdiv@quotient,f
  1099  0087  1903               	skipnz
  1100  0088  0AA7               	incf	___awdiv@quotient+1,f
  1101  0089                     l1015:
  1102  0089  0827               	movf	___awdiv@quotient+1,w
  1103  008A  00A1               	movwf	?___awdiv+1
  1104  008B  0826               	movf	___awdiv@quotient,w
  1105  008C  00A0               	movwf	?___awdiv
  1106  008D                     l320:
  1107  008D  0008               	return
  1108  008E                     __end_of___awdiv:
  1109                           
  1110                           	psect	text5
  1111  0144                     __ptext5:	
  1112 ;; *************** function _isr *****************
  1113 ;; Defined at:
  1114 ;;		line 37 in file "main7.c"
  1115 ;; Parameters:    Size  Location     Type
  1116 ;;		None
  1117 ;; Auto vars:     Size  Location     Type
  1118 ;;		None
  1119 ;; Return value:  Size  Location     Type
  1120 ;;                  1    wreg      void 
  1121 ;; Registers used:
  1122 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1123 ;; Tracked objects:
  1124 ;;		On entry : 0/0
  1125 ;;		On exit  : 0/0
  1126 ;;		Unchanged: 0/0
  1127 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1128 ;;      Params:         0       0       0       0       0
  1129 ;;      Locals:         0       0       0       0       0
  1130 ;;      Temps:          4       0       0       0       0
  1131 ;;      Totals:         4       0       0       0       0
  1132 ;;Total ram usage:        4 bytes
  1133 ;; Hardware stack levels used:    1
  1134 ;; This function calls:
  1135 ;;		Nothing
  1136 ;; This function is called by:
  1137 ;;		Interrupt level 1
  1138 ;; This function uses a non-reentrant model
  1139 ;;
  1140                           
  1141                           
  1142                           ;psect for function _isr
  1143  0144                     _isr:
  1144  0144                     i1l929:
  1145                           
  1146                           ;main7.c: 38:         if (T0IF == 1)
  1147  0144  1D0B               	btfss	11,2	;volatile
  1148  0145  2947               	goto	u45_21
  1149  0146  2948               	goto	u45_20
  1150  0147                     u45_21:
  1151  0147  297A               	goto	i1l957
  1152  0148                     u45_20:
  1153  0148                     i1l931:
  1154                           
  1155                           ;main7.c: 39:     {;main7.c: 40:         PORTDbits.RD2 = 0;
  1156  0148  1283               	bcf	3,5	;RP0=0, select bank0
  1157  0149  1303               	bcf	3,6	;RP1=0, select bank0
  1158  014A  1108               	bcf	8,2	;volatile
  1159                           
  1160                           ;main7.c: 41:         PORTDbits.RD0 = 1;
  1161  014B  1408               	bsf	8,0	;volatile
  1162  014C                     i1l933:
  1163                           
  1164                           ;main7.c: 42:         PORTC = (display[centena]);
  1165  014C  0836               	movf	_centena,w
  1166  014D  3E2B               	addlw	(low (_display| 0))& (0+255)
  1167  014E  0084               	movwf	4
  1168  014F  1383               	bcf	3,7	;select IRP bank0
  1169  0150  0800               	movf	0,w
  1170  0151  0087               	movwf	7	;volatile
  1171  0152                     i1l935:
  1172                           
  1173                           ;main7.c: 43:         multi = 0b00000001;
  1174  0152  3001               	movlw	1
  1175  0153  00F8               	movwf	_multi
  1176  0154  3000               	movlw	0
  1177  0155  00F9               	movwf	_multi+1
  1178  0156                     i1l937:
  1179                           
  1180                           ;main7.c: 45:         if (multi == 0b00000001)
  1181  0156  0378               	decf	_multi,w
  1182  0157  0479               	iorwf	_multi+1,w
  1183  0158  1D03               	btfss	3,2
  1184  0159  295B               	goto	u46_21
  1185  015A  295C               	goto	u46_20
  1186  015B                     u46_21:
  1187  015B  2967               	goto	i1l945
  1188  015C                     u46_20:
  1189  015C                     i1l939:
  1190                           
  1191                           ;main7.c: 46:         {;main7.c: 47:             PORTDbits.RD0 = 0;
  1192  015C  1008               	bcf	8,0	;volatile
  1193                           
  1194                           ;main7.c: 48:             PORTDbits.RD1 = 1;
  1195  015D  1488               	bsf	8,1	;volatile
  1196  015E                     i1l941:
  1197                           
  1198                           ;main7.c: 49:             PORTC = (display[decena]);
  1199  015E  0835               	movf	_decena,w
  1200  015F  3E2B               	addlw	(low (_display| 0))& (0+255)
  1201  0160  0084               	movwf	4
  1202  0161  0800               	movf	0,w
  1203  0162  0087               	movwf	7	;volatile
  1204  0163                     i1l943:
  1205                           
  1206                           ;main7.c: 50:             multi = 0b00000010;
  1207  0163  3002               	movlw	2
  1208  0164  00F8               	movwf	_multi
  1209  0165  3000               	movlw	0
  1210  0166  00F9               	movwf	_multi+1
  1211  0167                     i1l945:
  1212                           
  1213                           ;main7.c: 52:         if (multi == 0b00000010)
  1214  0167  3002               	movlw	2
  1215  0168  0678               	xorwf	_multi,w
  1216  0169  0479               	iorwf	_multi+1,w
  1217  016A  1D03               	btfss	3,2
  1218  016B  296D               	goto	u47_21
  1219  016C  296E               	goto	u47_20
  1220  016D                     u47_21:
  1221  016D  2977               	goto	i1l953
  1222  016E                     u47_20:
  1223  016E                     i1l947:
  1224                           
  1225                           ;main7.c: 53:         {;main7.c: 54:             PORTDbits.RD1 = 0;
  1226  016E  1088               	bcf	8,1	;volatile
  1227                           
  1228                           ;main7.c: 55:             PORTDbits.RD2 = 1;
  1229  016F  1508               	bsf	8,2	;volatile
  1230  0170                     i1l949:
  1231                           
  1232                           ;main7.c: 56:             PORTC = (display[unidad]);
  1233  0170  0876               	movf	_unidad,w
  1234  0171  3E2B               	addlw	(low (_display| 0))& (0+255)
  1235  0172  0084               	movwf	4
  1236  0173  0800               	movf	0,w
  1237  0174  0087               	movwf	7	;volatile
  1238  0175                     i1l951:
  1239                           
  1240                           ;main7.c: 57:             multi = 0x00;
  1241  0175  01F8               	clrf	_multi
  1242  0176  01F9               	clrf	_multi+1
  1243  0177                     i1l953:
  1244                           
  1245                           ;main7.c: 59:         INTCONbits.T0IF = 0;
  1246  0177  110B               	bcf	11,2	;volatile
  1247  0178                     i1l955:
  1248                           
  1249                           ;main7.c: 60:         TMR0 = 255;
  1250  0178  30FF               	movlw	255
  1251  0179  0081               	movwf	1	;volatile
  1252  017A                     i1l957:
  1253                           
  1254                           ;main7.c: 62:     if (RBIF == 1)
  1255  017A  1C0B               	btfss	11,0	;volatile
  1256  017B  297D               	goto	u48_21
  1257  017C  297E               	goto	u48_20
  1258  017D                     u48_21:
  1259  017D  298F               	goto	i1l67
  1260  017E                     u48_20:
  1261  017E                     i1l959:
  1262                           
  1263                           ;main7.c: 63:     {;main7.c: 64:         if (PORTBbits.RB0 == 0)
  1264  017E  1283               	bcf	3,5	;RP0=0, select bank0
  1265  017F  1303               	bcf	3,6	;RP1=0, select bank0
  1266  0180  1806               	btfsc	6,0	;volatile
  1267  0181  2983               	goto	u49_21
  1268  0182  2984               	goto	u49_20
  1269  0183                     u49_21:
  1270  0183  2988               	goto	i1l963
  1271  0184                     u49_20:
  1272  0184                     i1l961:
  1273                           
  1274                           ;main7.c: 65:         {;main7.c: 66:             PORTA++;
  1275  0184  3001               	movlw	1
  1276  0185  00F0               	movwf	??_isr
  1277  0186  0870               	movf	??_isr,w
  1278  0187  0785               	addwf	5,f	;volatile
  1279  0188                     i1l963:
  1280                           
  1281                           ;main7.c: 68:         if (PORTBbits.RB1 == 0)
  1282  0188  1886               	btfsc	6,1	;volatile
  1283  0189  298B               	goto	u50_21
  1284  018A  298C               	goto	u50_20
  1285  018B                     u50_21:
  1286  018B  298E               	goto	i1l967
  1287  018C                     u50_20:
  1288  018C                     i1l965:
  1289                           
  1290                           ;main7.c: 69:         {;main7.c: 70:             PORTA--;
  1291  018C  3001               	movlw	1
  1292  018D  0285               	subwf	5,f	;volatile
  1293  018E                     i1l967:
  1294                           
  1295                           ;main7.c: 72:         INTCONbits.RBIF = 0;
  1296  018E  100B               	bcf	11,0	;volatile
  1297  018F                     i1l67:
  1298  018F  0873               	movf	??_isr+3,w
  1299  0190  008A               	movwf	10
  1300  0191  0872               	movf	??_isr+2,w
  1301  0192  0084               	movwf	4
  1302  0193  0E71               	swapf	??_isr+1,w
  1303  0194  0083               	movwf	3
  1304  0195  0EFE               	swapf	btemp,f
  1305  0196  0E7E               	swapf	btemp,w
  1306  0197  0009               	retfie
  1307  0198                     __end_of_isr:
  1308  007E                     btemp	set	126	;btemp
  1309  007E                     wtemp0	set	126
  1310                           
  1311                           	psect	intentry
  1312  0004                     __pintentry:	
  1313                           ;incstack = 0
  1314                           ; Regs used in _isr: [wreg-fsr0h+status,2+status,0]
  1315                           
  1316  0004                     interrupt_function:
  1317  007E                     saved_w	set	btemp
  1318  0004  00FE               	movwf	btemp
  1319  0005  0E03               	swapf	3,w
  1320  0006  00F1               	movwf	??_isr+1
  1321  0007  0804               	movf	4,w
  1322  0008  00F2               	movwf	??_isr+2
  1323  0009  080A               	movf	10,w
  1324  000A  00F3               	movwf	??_isr+3
  1325  000B  120A  118A  2944   	ljmp	_isr
  1326                           
  1327                           	psect	config
  1328                           
  1329                           ;Config register CONFIG1 @ 0x2007
  1330                           ;	Oscillator Selection bits
  1331                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  1332                           ;	Watchdog Timer Enable bit
  1333                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  1334                           ;	Power-up Timer Enable bit
  1335                           ;	PWRTE = OFF, PWRT disabled
  1336                           ;	RE3/MCLR pin function select bit
  1337                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  1338                           ;	Code Protection bit
  1339                           ;	CP = OFF, Program memory code protection is disabled
  1340                           ;	Data Code Protection bit
  1341                           ;	CPD = OFF, Data memory code protection is disabled
  1342                           ;	Brown Out Reset Selection bits
  1343                           ;	BOREN = OFF, BOR disabled
  1344                           ;	Internal External Switchover bit
  1345                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  1346                           ;	Fail-Safe Clock Monitor Enabled bit
  1347                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  1348                           ;	Low Voltage Programming Enable bit
  1349                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  1350                           ;	In-Circuit Debugger Mode bit
  1351                           ;	DEBUG = 0x1, unprogrammed default
  1352  2007                     	org	8199
  1353  2007  20D4               	dw	8404
  1354                           
  1355                           ;Config register CONFIG2 @ 0x2008
  1356                           ;	Brown-out Reset Selection bit
  1357                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  1358                           ;	Flash Program Memory Self Write Enable bits
  1359                           ;	WRT = OFF, Write protection off
  1360  2008                     	org	8200
  1361  2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        10
    BSS         2
    Persistent  4
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      6      10
    BANK0            80     11      23
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _division->___awdiv
    _division->___awmod

Critical Paths under _isr in COMMON

    None.

Critical Paths under _main in BANK0

    _main->_division
    _division->___awdiv

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0    1598
                                              5 COMMON     1     1      0
                           _division
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _division                                             3     3      0    1598
                                              8 BANK0      3     3      0
                            ___awdiv
                            ___awmod
 ---------------------------------------------------------------------------------
 (2) ___awmod                                              7     3      4     793
                                              4 COMMON     1     1      0
                                              0 BANK0      6     2      4
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              9     5      4     805
                                              4 COMMON     1     1      0
                                              0 BANK0      8     4      4
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  4     4      0       0
                                              0 COMMON     4     4      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _division
     ___awdiv
     ___awmod
   _setup

 _isr (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BANK3               60      0       0       9        0.0%
BITBANK3            60      0       0       8        0.0%
SFR3                 0      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
BANK2               60      0       0      11        0.0%
BITBANK2            60      0       0      10        0.0%
SFR2                 0      0       0       5        0.0%
BITSFR2              0      0       0       5        0.0%
BANK1               50      0       0       7        0.0%
BITBANK1            50      0       0       6        0.0%
SFR1                 0      0       0       2        0.0%
BITSFR1              0      0       0       2        0.0%
BANK0               50      B      17       5       28.7%
BITBANK0            50      0       0       4        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR0              0      0       0       1        0.0%
COMMON               E      6       A       1       71.4%
BITCOMMON            E      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
DATA                 0      0      21      12        0.0%
ABS                  0      0      21       3        0.0%
NULL                 0      0       0       0        0.0%
STACK                0      0       0       2        0.0%
EEDATA             100      0       0       0        0.0%


Microchip Technology PIC Macro Assembler V2.31 build 20201012212115 
Symbol Table                                                                                   Tue Sep 28 18:09:47 2021

                      pc 0002                       l81 00E8                       l78 01BE  
           ___awdiv@sign 0025                       fsr 0004                      l320 008D  
                    l333 0143                      l761 01A9                      l771 01B0  
                    l763 01AC                      l755 0198                      l781 01B5  
                    l773 01B1                      l765 01AD                      l757 019C  
                    l791 01BA                      l783 01B6                      l775 01B2  
                    l767 01AE                      l759 019F                      l793 01BC  
                    l785 01B7                      l777 01B3                      l769 01AF  
                    l795 01BD                      l787 01B8                      l779 01B4  
                    l981 0031                      l789 01B9                      l991 0042  
                    l983 0033                      l975 0025                      l993 0048  
                    l985 0037                      l977 0028                      l995 004B  
                    l987 003C                      l979 002C                      l997 0052  
                    l989 0040                      l999 0056                      u510 002C  
                    u511 002B                      u600 0084                      u520 0037  
                    u601 0083                      u521 0036                      u530 0048  
                    u610 00F0                      u531 0047                      u611 00EF  
                    u620 00FB                      u621 00FA                      u550 005A  
                    u630 0106                      u551 0059                      u631 0105  
                    u545 004C                      u570 006B                      u650 0118  
                    u571 006A                      u651 0117                      u660 0122  
                    u565 005B                      u661 0121                      u645 010A  
                    u590 007F                      u591 007E                      u575 0067  
                    u680 0135                      u585 0073                      u681 0134  
                    u665 011E                      u690 013A                      u691 0139  
                    u675 0129                      _isr 0144                      fsr0 0004  
                    indf 0000             ___awmod@sign 0025                     l1001 005A  
                   l1003 006B                     l1011 007F                     l1013 0084  
                   l1005 0071                     l1021 00EC                     l1015 0089  
                   l1007 0072                     l1031 0100                     l1023 00F0  
                   l1009 0079                     l1041 0118                     l1033 0106  
                   l1025 00F5                     l1051 013A                     l1043 0122  
                   l1035 0109                     l1027 00F7                     l1019 00E9  
                   l1053 013F                     l1045 0128                     l1037 0110  
                   l1029 00FB                     l1061 01C4                     l1047 012F  
                   l1039 0114                     l1063 01CA                     l1049 0135  
                   l1057 008E                     l1059 01BF                     ?_isr 0070  
                   _T0IF 005A                     _RBIF 0058                     i1l67 018F  
                   _TMR0 0001                     _WPUB 0095                     _cont 0077  
                   _main 01BF                     btemp 007E                     start 000E  
                  ??_isr 0070                    ?_main 0070          __end_of___awdiv 008E  
        __end_of___awmod 0144                    _ANSEL 0188          ___awdiv@divisor 0020  
                  i1l931 0148                    i1l941 015E                    i1l933 014C  
                  i1l951 0175                    i1l943 0163                    i1l935 0152  
                  i1l961 0184                    i1l953 0177                    i1l945 0167  
                  i1l937 0156                    i1l929 0144                    i1l963 0188  
                  i1l955 0178                    i1l947 016E                    i1l939 015C  
                  i1l965 018C                    i1l949 0170                    i1l957 017A  
                  i1l967 018E                    i1l959 017E          ___awdiv@counter 0024  
                  u50_20 018C                    u50_21 018B                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  u45_20 0148                    u45_21 0147                    u46_20 015C  
                  u46_21 015B                    u47_20 016E                    u47_21 016D  
                  u48_20 017E                    u48_21 017D                    u49_20 0184  
                  u49_21 0183                    _TRISA 0085                    _TRISC 0087  
                  _TRISD 0088                    _multi 0078                    _setup 0198  
                  pclath 000A                    status 0003                    wtemp0 007E  
        __initialization 0011             __end_of_main 01D3                   ??_main 0075  
       ___awdiv@dividend 0022                   ?_setup 0070                   _ANSELH 0189  
       __end_of_division 00E9                ??___awdiv 0074                   _decena 0035  
              ??___awmod 0074         ___awdiv@quotient 0026          ___awmod@divisor 0020  
        ___awmod@counter 0024                   _unidad 0076                   saved_w 007E  
__end_of__initialization 0021           __pcstackCOMMON 0070             __pidataBANK0 01E6  
          __end_of_setup 01BF           _OPTION_REGbits 0081                  ??_setup 0074  
             __pnvCOMMON 0076               __pmaintext 01BF               __pintentry 0004  
              ?_division 0070                  ___awdiv 0025                  ___awmod 00E9  
                _centena 0036                  __ptext1 0198                  __ptext2 008E  
                __ptext3 00E9                  __ptext4 0025                  __ptext5 0144  
                _display 002B             __size_of_isr 0054         ___awmod@dividend 0022  
   end_of_initialization 0021               ??_division 0028                _PORTBbits 0006  
              _PORTDbits 0008                _TRISBbits 0086      start_initialization 0011  
            __end_of_isr 0198               init_fetch0 01D3              __pdataBANK0 002B  
            __pbssCOMMON 0078                ___latbits 0002            __pcstackBANK0 0020  
      __size_of_division 005B                __pnvBANK0 0035                 ?___awdiv 0020  
               ?___awmod 0020           __size_of_setup 0027        interrupt_function 0004  
               _IOCBbits 0096         __size_of___awdiv 0069         __size_of___awmod 005B  
               _division 008E            __size_of_main 0014               _INTCONbits 000B  
               init_ram0 01D7                 intlevel1 0000               _OSCCONbits 008F  
